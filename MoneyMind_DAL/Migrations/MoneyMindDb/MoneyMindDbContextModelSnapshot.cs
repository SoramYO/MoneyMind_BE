// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyMind_DAL.DBContexts;

#nullable disable

namespace MoneyMind_DAL.Migrations.MoneyMindDb
{
    [DbContext(typeof(MoneyMindDbContext))]
    partial class MoneyMindDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyMind_DAL.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b203ae2f-3023-41c1-a25a-2b2ec238321d"),
                            Description = "Essential expenses for daily living, including food, housing, and utilities.",
                            Name = "Necessities"
                        },
                        new
                        {
                            Id = new Guid("654a9673-4d23-44b1-9af8-a9562341a60e"),
                            Description = "Allocations for building wealth and achieving long-term financial independence.",
                            Name = "Financial Freedom"
                        },
                        new
                        {
                            Id = new Guid("19ea7e67-8095-4a13-bba4-bda0a4a47a38"),
                            Description = "Investments in personal growth, such as books, courses, and training programs.",
                            Name = "Education"
                        },
                        new
                        {
                            Id = new Guid("6193fcb1-c8c4-44e9-abde-78cdb4258c4e"),
                            Description = "Spending on entertainment and recreational activities for enjoyment.",
                            Name = "Leisure"
                        },
                        new
                        {
                            Id = new Guid("b79d14db-7a81-4046-b66e-1acd761123bb"),
                            Description = "Contributions to charitable causes or support for those in need.",
                            Name = "Charity"
                        },
                        new
                        {
                            Id = new Guid("ebebc667-520d-4eac-88ed-ef9eb8e26aab"),
                            Description = "Funds set aside for major purchases, emergencies, or future needs.",
                            Name = "Savings"
                        });
                });

            modelBuilder.Entity("MoneyMind_DAL.Entities.Jar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<double>("TotalSpent")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Jars");
                });

            modelBuilder.Entity("MoneyMind_DAL.Entities.MonthlyGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<double>("SpentAmount")
                        .HasColumnType("float");

                    b.Property<double>("TargetAmount")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonthlyGoals");
                });

            modelBuilder.Entity("MoneyMind_DAL.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MoneyMind_DAL.Entities.Jar", b =>
                {
                    b.HasOne("MoneyMind_DAL.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoneyMind_DAL.Entities.Transaction", b =>
                {
                    b.HasOne("MoneyMind_DAL.Entities.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MoneyMind_DAL.Entities.Category", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
